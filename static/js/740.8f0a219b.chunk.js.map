{"version":3,"file":"static/js/740.8f0a219b.chunk.js","mappings":"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","sources":["components/container/PageContainer.js","components/shared/DashboardCard.js","views/dashboard/components/SalesOverview.js","views/dashboard/components/MonthlyEarnings.js","views/dashboard/components/KhachDatDon.js","views/dashboard/components/LoiNhuan.js","views/dashboard/components/TrangThaiDonHang.js","views/dashboard/components/DonHang.js","views/dashboard/components/DoanhThuDateToDate.js","views/dashboard/components/BestSeller.jsx","views/dashboard/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Card, CardContent, Typography, Stack, Box } from '@mui/material';\r\n\r\nconst DashboardCard = ({\r\n  title,\r\n  subtitle,\r\n  children,\r\n  action,\r\n  footer,\r\n  cardheading,\r\n  headtitle,\r\n  headsubtitle,\r\n  middlecontent,\r\n}) => {\r\n\r\n  return (\r\n    <Card\r\n      sx={{ padding: 0 }}\r\n      elevation={9}\r\n      variant={undefined}\r\n    >\r\n      {cardheading ? (\r\n        <CardContent>\r\n          <Typography variant=\"h5\">{headtitle}</Typography>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n            {headsubtitle}\r\n          </Typography>\r\n        </CardContent>\r\n      ) : (\r\n        <CardContent sx={{ p: \"30px\" }}>\r\n          {title ? (\r\n            <Stack\r\n              direction=\"row\"\r\n              spacing={2}\r\n              justifyContent=\"space-between\"\r\n              alignItems={'center'}\r\n              mb={3}\r\n            >\r\n              <Box>\r\n                {title ? <Typography variant=\"h5\">{title}</Typography> : ''}\r\n\r\n                {subtitle ? (\r\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    {subtitle}\r\n                  </Typography>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Box>\r\n              {action}\r\n            </Stack>\r\n          ) : null}\r\n\r\n          {children}\r\n        </CardContent>\r\n      )}\r\n\r\n      {middlecontent}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DashboardCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Select, MenuItem } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport DashboardCard from \"../../../components/shared/DashboardCard\";\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nconst SalesOverview = () => {\r\n  const [monthlyRevenue, setMonthlyRevenue] = useState([]); // Dữ liệu doanh thu theo tháng\r\n  const [year, setYear] = useState(2024);\r\n\r\n  const theme = useTheme();\r\n  const primary = theme.palette.primary.main;\r\n\r\n  // Gọi API để lấy doanh thu cho năm được chọn\r\n  useEffect(() => {\r\n    fetchMonthlyRevenue(year);\r\n  }, [year]);\r\n\r\n  // const fetchMonthlyRevenue = async (selectedYear) => {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `http://localhost:8080/api/getDoanhThuChart?year=${selectedYear}`\r\n  //     );\r\n  //     setMonthlyRevenue(response.data || []); // Giả sử API trả về mảng doanh thu theo tháng\r\n  //   } catch (error) {\r\n  //     console.error(\"Lỗi khi lấy doanh thu: \", error);\r\n  //     setMonthlyRevenue([]);\r\n  //   }\r\n  // };\r\n  const fetchMonthlyRevenue = async (selectedYear) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:8080/api/getDoanhThuChart?year=${selectedYear}`\r\n      );\r\n\r\n      console.log(\"Dữ liệu từ API:\", response.data);\r\n\r\n      // Mảng mặc định cho 12 tháng, giá trị ban đầu là 0\r\n      const defaultRevenue = Array(12).fill(0);\r\n\r\n      // Giả sử dữ liệu API trả về dạng [{ month: 1, revenue: 100 }, ...]\r\n      if (Array.isArray(response.data)) {\r\n        response.data.forEach((item) => {\r\n          if (item.month >= 1 && item.month <= 12) {\r\n            defaultRevenue[item.month - 1] = item.revenue || 0; // Đặt doanh thu vào đúng tháng\r\n          }\r\n        });\r\n      }\r\n\r\n      setMonthlyRevenue(defaultRevenue); // Ghi nhận dữ liệu đã xử lý\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi lấy doanh thu: \", error.response || error);\r\n      setMonthlyRevenue(Array(12).fill(0)); // Giá trị mặc định khi lỗi\r\n    }\r\n  };\r\n\r\n  const handleYearChange = (event) => {\r\n    const selectedYear = event.target.value;\r\n    console.log(\"Năm được chọn:\", selectedYear);\r\n    setYear(selectedYear);\r\n  };\r\n\r\n  // Thay đổi dữ liệu cho chart theo doanh thu đã lấy\r\n  const seriescolumnchart = [{ name: \"Doanh thu\", data: monthlyRevenue }];\r\n\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <DashboardCard\r\n      title={`Doanh thu trong năm ${currentYear}`}\r\n      action={\r\n        <Select\r\n          id=\"year-dd\"\r\n          value={year}\r\n          size=\"small\"\r\n          onChange={handleYearChange}\r\n        >\r\n          {[2022, 2023, 2024, 2025].map((yearOption) => (\r\n            <MenuItem key={yearOption} value={yearOption}>\r\n              Năm {yearOption}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      }\r\n    >\r\n      <Chart\r\n        options={{\r\n          chart: {\r\n            type: \"bar\",\r\n            fontFamily: \"'Plus Jakarta Sans', sans-serif\",\r\n            foreColor: \"#adb0bb\",\r\n            toolbar: { show: true },\r\n            height: 370,\r\n          },\r\n          colors: [primary],\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n              columnWidth: \"42%\",\r\n              borderRadius: 6,\r\n            },\r\n          },\r\n          stroke: { show: true, width: 5, colors: [\"transparent\"] },\r\n          dataLabels: { enabled: false },\r\n          grid: { borderColor: \"rgba(0,0,0,0.1)\", strokeDashArray: 3 },\r\n          yaxis: { tickAmount: 4 },\r\n          xaxis: {\r\n            categories: [\r\n              \"January\",\r\n              \"February\",\r\n              \"March\",\r\n              \"April\",\r\n              \"May\",\r\n              \"June\",\r\n              \"July\",\r\n              \"August\",\r\n              \"September\",\r\n              \"October\",\r\n              \"November\",\r\n              \"December\",\r\n            ],\r\n          },\r\n          tooltip: {\r\n            theme: theme.palette.mode === \"dark\" ? \"dark\" : \"light\",\r\n          },\r\n        }}\r\n        series={seriescolumnchart}\r\n        type=\"bar\"\r\n        height=\"370px\"\r\n      />\r\n    </DashboardCard>\r\n  );\r\n};\r\n\r\nexport default SalesOverview;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Stack, Typography, Avatar, Fab } from \"@mui/material\";\r\nimport { IconArrowDownRight, IconCurrencyDollar } from \"@tabler/icons-react\";\r\nimport DashboardCard from \"../../../components/shared/DashboardCard\";\r\n\r\nconst MonthlyEarnings = () => {\r\n  // chart color\r\n  const theme = useTheme();\r\n  const errorlight = \"#fdede8\";\r\n  const currentMonth = new Date().getMonth() + 1;\r\n  const [doanhThu, setDoanhThu] = useState(0);\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"http://localhost:8080/api/getDoanhThu\")\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => {\r\n  //       console.log(data);\r\n  //       setDoanhThu(data || 0);\r\n  //     });\r\n  // });\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/api/getDoanhThu\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Dữ liệu từ API:\", data);\r\n        // Kiểm tra và lấy giá trị revenue\r\n        if (data && typeof data === \"object\" && data.revenue) {\r\n          setDoanhThu(data.revenue);\r\n        } else {\r\n          setDoanhThu(0);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Lỗi khi gọi API:\", error);\r\n        setDoanhThu(0);\r\n      });\r\n  }, []);\r\n  return (\r\n    <DashboardCard\r\n      title={`Doanh thu tháng ${currentMonth}`}\r\n      action={\r\n        <Fab color=\"secondary\" size=\"medium\" sx={{ color: \"#ffffff\" }}>\r\n          <IconCurrencyDollar width={24} />\r\n        </Fab>\r\n      }\r\n    >\r\n      <Typography variant=\"h3\" fontWeight=\"700\" mt=\"-20px\">\r\n        {doanhThu || 0} VND\r\n      </Typography>\r\n    </DashboardCard>\r\n  );\r\n};\r\n\r\nexport default MonthlyEarnings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Stack, Typography, Avatar, Fab } from \"@mui/material\";\r\nimport { IconUser } from \"@tabler/icons-react\";\r\nimport DashboardCard from \"../../../components/shared/DashboardCard\";\r\n\r\nconst KhachDatDon = () => {\r\n  // chart color\r\n  const theme = useTheme();\r\n  const errorlight = \"#fdede8\";\r\n  const currentMonth = new Date().getMonth() + 1;\r\n  const [khachhang, setKhachHang] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/api/getKhachHang\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setKhachHang(data || 0);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <DashboardCard\r\n      title={`Khách hàng tháng ${currentMonth}`}\r\n      action={\r\n        <Fab color=\"secondary\" size=\"medium\" sx={{ color: \"#ffffff\" }}>\r\n          <IconUser width={24} />\r\n        </Fab>\r\n      }\r\n    >\r\n      <>\r\n        <Typography variant=\"h3\" fontWeight=\"700\" mt=\"-20px\">\r\n          {khachhang}\r\n        </Typography>\r\n      </>\r\n    </DashboardCard>\r\n  );\r\n};\r\n\r\nexport default KhachDatDon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Stack, Typography, Avatar, Fab } from \"@mui/material\";\r\nimport { IconCurrencyCent } from \"@tabler/icons-react\";\r\nimport DashboardCard from \"../../../components/shared/DashboardCard\";\r\n\r\nconst LoiNhuan = () => {\r\n  // chart color\r\n  const theme = useTheme();\r\n  const errorlight = \"#fdede8\";\r\n  const currentMonth = new Date().getMonth() + 1;\r\n  const [loinhuan, setLoiNhuan] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/api/getLoiNhuan\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setLoiNhuan(data || 0);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        setLoiNhuan(0);\r\n      })\r\n      ;\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <DashboardCard\r\n      title={`Lợi nhuận tháng ${currentMonth}`}\r\n      action={\r\n        <Fab color=\"secondary\" size=\"medium\" sx={{ color: \"#ffffff\" }}>\r\n          <IconCurrencyCent width={24} />\r\n        </Fab>\r\n      }\r\n    >\r\n      <>\r\n        <Typography variant=\"h3\" fontWeight=\"700\" mt=\"-20px\">\r\n          {loinhuan} VND\r\n        </Typography>\r\n      </>\r\n    </DashboardCard>\r\n  );\r\n};\r\n\r\nexport default LoiNhuan;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport DashboardCard from \"../../../components/shared/DashboardCard\";\r\nimport { Select } from \"antd\"; // Import Select từ Ant Design\r\n\r\nconst { Option } = Select;\r\n\r\nconst TrangThaiDonHang = () => {\r\n  const [statusData, setStatusData] = useState({}); // Dữ liệu trạng thái đơn hàng\r\n  //const [month, setMonth] = useState(new Date().getMonth() + 1); // Tháng hiện tại\r\n  //const [year, setYear] = useState(new Date().getFullYear()); // Năm hiện tại\r\n  const [month, setMonth] = useState(9); // Mặc định tháng 9\r\n  const [year, setYear] = useState(2024);\r\n  // Gọi API để lấy trạng thái đơn hàng\r\n  useEffect(() => {\r\n    fetchOrderStatus();\r\n  }, [month, year]);\r\n\r\n  const fetchOrderStatus = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:8080/api/getTrangThaiDonHang?month=${month}&year=${year}`\r\n      );\r\n      setStatusData(response.data || {});\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi lấy trạng thái đơn hàng: \", error);\r\n      setStatusData({});\r\n    }\r\n  };\r\n\r\n  // Chuyển đổi dữ liệu cho biểu đồ\r\n  const chartData = {\r\n    labels: Object.keys(statusData), // Trạng thái đơn hàng\r\n    series: Object.values(statusData), // Số lượng đơn hàng cho từng trạng thái\r\n  };\r\n\r\n  return (\r\n    <DashboardCard title={`Đơn hàng tháng ${month} năm ${year}`}>\r\n      <div style={{ display: \"flex\", gap: \"20px\", marginBottom: \"20px\" }}>\r\n        <Select\r\n          value={month}\r\n          onChange={(value) => setMonth(value)}\r\n          style={{ width: 120 }}\r\n          placeholder=\"Chọn tháng\"\r\n        >\r\n          {[...Array(12).keys()].map((m) => (\r\n            <Option key={m} value={m + 1}>\r\n              {m + 1}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n\r\n        <Select\r\n          value={year}\r\n          onChange={(value) => setYear(value)}\r\n          style={{ width: 120 }}\r\n          placeholder=\"Chọn năm\"\r\n        >\r\n          {[2020, 2021, 2022, 2023, 2024].map((y) => (\r\n            <Option key={y} value={y}>\r\n              {y}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <Chart\r\n        options={{\r\n          labels: chartData.labels,\r\n          colors: [\"#008FFB\", \"#00E396\", \"#FEB019\", \"#FF4560\", \"#775DD0\"],\r\n          plotOptions: {\r\n            pie: {\r\n              donut: {\r\n                size: \"60%\",\r\n              },\r\n            },\r\n          },\r\n          tooltip: {\r\n            theme: \"light\",\r\n          },\r\n        }}\r\n        series={chartData.series}\r\n        type=\"donut\"\r\n        height=\"370px\"\r\n      />\r\n    </DashboardCard>\r\n  );\r\n};\r\n\r\nexport default TrangThaiDonHang;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Stack, Typography, Avatar, Fab } from \"@mui/material\";\r\nimport { IconUser } from \"@tabler/icons-react\";\r\nimport DashboardCard from \"../../../components/shared/DashboardCard\";\r\n\r\nconst DonHang = () => {\r\n  // chart color\r\n  const theme = useTheme();\r\n  const errorlight = \"#fdede8\";\r\n  const currentMonth = new Date().getMonth() + 1;\r\n  const [totalOrders, setTotalOrders] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/api/getTotal\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setTotalOrders(data || 0);\r\n      });\r\n  });\r\n\r\n  return (\r\n    <DashboardCard\r\n      title={`Đơn hàng tháng ${currentMonth}`}\r\n      style={{ color: \"orange\" }}\r\n      action={\r\n        <Fab color=\"secondary\" size=\"medium\" sx={{ color: \"#ffffff\" }}>\r\n          <IconUser width={24} />\r\n        </Fab>\r\n      }\r\n    >\r\n      <Typography variant=\"h3\" fontWeight=\"700\" mt=\"-20px\">\r\n        {totalOrders}\r\n      </Typography>\r\n    </DashboardCard>\r\n  );\r\n};\r\n\r\nexport default DonHang;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport axios from \"axios\";\r\nimport \"../../../styles/DoanhThuDateToDate.css\"; // Đảm bảo tạo file CSS này\r\n\r\nconst DoanhThuDateToDate = () => {\r\n  const [doanhThuData, setDoanhThuData] = useState([]);\r\n  const [startDate, setStartDate] = useState(\"2024-09-01\");\r\n  const [endDate, setEndDate] = useState(\"2024-09-30\");\r\n\r\n  const fetchDoanhThu = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:8080/api/getDoanhThuDateToDate\",\r\n        {\r\n          params: {\r\n            startDate,\r\n            endDate,\r\n            trangThai: \"Đã giao\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Doanh thu là:\", response.data);\r\n\r\n      if (Array.isArray(response.data)) {\r\n        setDoanhThuData(response.data);\r\n      } else {\r\n        console.error(\"Dữ liệu không đúng định dạng:\", response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi lấy doanh thu:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDoanhThu();\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <div className=\"doanh-thu-container\">\r\n      <h2>Doanh Thu Theo Ngày Trong Tháng</h2>\r\n      <div className=\"date-pickers\">\r\n        <label>\r\n          Chọn từ ngày:\r\n          <input\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Chọn đến ngày:\r\n          <input\r\n            type=\"date\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <LineChart data={doanhThuData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"doanhThu\" name=\"Doanh Thu Theo Ngày Trong Tháng\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoanhThuDateToDate;\r\n","import { Card, Image, Row, Col, Select, Button } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BestSeller = () => {\r\n  const [listSanPham, setListSanPham] = useState([]);\r\n  const [thang, setThang] = useState(10); // Tháng mặc định là 10\r\n  const [nam, setNam] = useState(2024); // Năm mặc định là 2024\r\n\r\n  const getBestSeller = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `http://localhost:8080/api/list/bestSeller/dashboard?thang=${thang}&nam=${nam}`\r\n      );\r\n      setListSanPham(res.data);\r\n      console.log(\"Dữ liệu nè ní: \", res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBestSeller();\r\n  }, [thang, nam]); // Gọi lại API khi thay đổi tháng hoặc năm\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", fontFamily: \"'Poppins', sans-serif\" }}>\r\n      <h2 style={{ textAlign: \"center\", marginBottom: \"20px\", color: \"#444\" }}>\r\n        🌟 TOP 10 Best Sellers 🌟\r\n      </h2>\r\n\r\n      {/* Chọn tháng và năm */}\r\n      <div style={{ textAlign: \"center\", marginBottom: \"30px\" }}>\r\n        <Select\r\n          value={thang}\r\n          onChange={(value) => setThang(value)}\r\n          style={{ width: 120, marginRight: \"10px\" }}\r\n        >\r\n          {[...Array(12)].map((_, i) => (\r\n            <Select.Option key={i + 1} value={i + 1}>\r\n              Tháng {i + 1}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n\r\n        <Select\r\n          value={nam}\r\n          onChange={(value) => setNam(value)}\r\n          style={{ width: 120 }}\r\n        >\r\n          {[\"2022\", \"2023\", \"2024\", \"2025\"].map((year) => (\r\n            <Select.Option key={year} value={parseInt(year)}>\r\n              {year}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n\r\n        <Button\r\n          onClick={getBestSeller}\r\n          type=\"primary\"\r\n          style={{ marginLeft: \"20px\" }}\r\n        >\r\n          Tìm kiếm\r\n        </Button>\r\n      </div>\r\n\r\n      <Row gutter={[16, 16]} justify=\"center\">\r\n        {listSanPham.map((item, index) => (\r\n          <Col key={index} xs={24} sm={12} md={8} lg={8}>\r\n            <Card\r\n              hoverable\r\n              style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                borderRadius: \"10px\",\r\n                overflow: \"hidden\",\r\n                boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n                transition: \"transform 0.3s, box-shadow 0.3s\",\r\n              }}\r\n              bodyStyle={{\r\n                padding: \"15px\",\r\n                background: \"#fff\",\r\n              }}\r\n              onHover={() => console.log(`Hovered on ${item.tenSanPham}`)}\r\n            >\r\n              <Image\r\n                width=\"100%\"\r\n                height=\"200px\"\r\n                src={`http://localhost:8080/images/${item.tenHinh}`}\r\n                style={{\r\n                  borderRadius: \"10px 10px 0 0\",\r\n                  objectFit: \"cover\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n                alt={item.tenHinh}\r\n              />\r\n              <h3 style={{ color: \"#2c3e50\", fontWeight: \"600\" }}>\r\n                {item.tenSanPham}\r\n              </h3>\r\n              <p\r\n                style={{\r\n                  color: \"#e74c3c\",\r\n                  fontWeight: \"500\",\r\n                  fontSize: \"26px\",\r\n                }}\r\n              >\r\n                {item.giaGoc.toLocaleString()} VND\r\n              </p>\r\n              <p\r\n                style={{\r\n                  color: \"#e74c3c\",\r\n                  fontWeight: \"500\",\r\n                  fontSize: \"26px\",\r\n                }}\r\n              >\r\n                Đã bán: {item.tongSoLuong.toLocaleString()} cái\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BestSeller;\r\n","import { Grid, Box } from \"@mui/material\";\r\nimport PageContainer from \"../../components/container/PageContainer\";\r\n\r\n// components\r\nimport SalesOverview from \"./components/SalesOverview\";\r\nimport YearlyBreakup from \"./components/YearlyBreakup\";\r\n// import RecentTransactions from \"./components/RecentTransactions\";\r\n// import ProductPerformance from \"./components/ProductPerformance\";\r\n// import Blog from \"./components/Blog\";\r\nimport MonthlyEarnings from \"./components/MonthlyEarnings\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport KhachDatDon from \"./components/KhachDatDon\";\r\nimport LoiNhuan from \"./components/LoiNhuan\";\r\nimport TrangThaiDonHang from \"./components/TrangThaiDonHang\";\r\nimport \"../../styles/trangthaidonhang.css\";\r\nimport DonHang from \"./components/DonHang\";\r\nimport DoanhThuDateToDate from \"./components/DoanhThuDateToDate\";\r\nimport BestSeller from \"./components/BestSeller\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return (\r\n    <PageContainer title=\"Dashboard\" description=\"this is Dashboard\">\r\n      <Box>\r\n        <Grid container spacing={3}>\r\n          {/* Phần tử hang1 nằm chung 1 hàng ngang */}\r\n          <Grid item xs={12} lg={6}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6} className=\"hang1\">\r\n                <DonHang />\r\n              </Grid>\r\n              <Grid item xs={6} className=\"hang1\">\r\n                <MonthlyEarnings />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Phần tử hang2 nằm chung 1 hàng ngang */}\r\n          <Grid item xs={12} lg={6}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6} className=\"hang2\">\r\n                <KhachDatDon />\r\n              </Grid>\r\n              <Grid item xs={6} className=\"hang2\">\r\n                <LoiNhuan />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Hàng riêng cho SalesOverview */}\r\n          <Grid item xs={12} lg={12} className=\"hang3\">\r\n            <SalesOverview />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} lg={12} className=\"hang4\">\r\n            <DoanhThuDateToDate />\r\n          </Grid>\r\n\r\n          {/* Hàng riêng cho TrangThaiDonHang */}\r\n          <Grid item xs={12} lg={12} className=\"hang4\">\r\n            <TrangThaiDonHang />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} lg={12} className=\"hang4\">\r\n            <BestSeller />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","title","description","children","_jsxs","Helmet","_jsx","name","content","subtitle","action","footer","cardheading","headtitle","headsubtitle","middlecontent","Card","sx","padding","elevation","variant","undefined","CardContent","Typography","color","p","Stack","direction","spacing","justifyContent","alignItems","mb","Box","SalesOverview","monthlyRevenue","setMonthlyRevenue","useState","year","setYear","theme","useTheme","primary","palette","main","useEffect","fetchMonthlyRevenue","async","response","axios","get","selectedYear","console","log","data","defaultRevenue","Array","fill","isArray","forEach","item","month","revenue","error","seriescolumnchart","currentYear","Date","getFullYear","DashboardCard","Select","id","value","size","onChange","event","target","map","yearOption","MenuItem","Chart","options","chart","type","fontFamily","foreColor","toolbar","show","height","colors","plotOptions","bar","horizontal","columnWidth","borderRadius","stroke","width","dataLabels","enabled","grid","borderColor","strokeDashArray","yaxis","tickAmount","xaxis","categories","tooltip","mode","series","MonthlyEarnings","currentMonth","getMonth","doanhThu","setDoanhThu","fetch","then","json","catch","Fab","IconCurrencyDollar","fontWeight","mt","KhachDatDon","khachhang","setKhachHang","IconUser","_Fragment","LoiNhuan","loinhuan","setLoiNhuan","IconCurrencyCent","Option","TrangThaiDonHang","statusData","setStatusData","setMonth","fetchOrderStatus","chartData","labels","Object","keys","values","style","display","gap","marginBottom","placeholder","m","y","pie","donut","DonHang","totalOrders","setTotalOrders","DoanhThuDateToDate","doanhThuData","setDoanhThuData","startDate","setStartDate","endDate","setEndDate","params","trangThai","fetchDoanhThu","className","e","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","activeDot","r","BestSeller","listSanPham","setListSanPham","thang","setThang","nam","setNam","getBestSeller","res","textAlign","marginRight","_","i","parseInt","Button","onClick","marginLeft","Row","gutter","justify","index","Col","xs","sm","md","lg","hoverable","overflow","boxShadow","transition","bodyStyle","background","onHover","tenSanPham","Image","src","tenHinh","objectFit","alt","fontSize","giaGoc","toLocaleString","tongSoLuong","Dashboard","localStorage","getItem","PageContainer","Grid","container","Navigate","to","replace"],"sourceRoot":""}